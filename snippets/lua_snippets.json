{
  "ATL.Import": {
    "prefix": ["ATL.Import", "shared_script", "import"],
    "body": [
      "shared_scripts {",
      "  '@atl-core/import.lua'",
      "}"
    ],
    "description": "Imports the ATL object for both the client and server"
  },
  "ATL.RegisterCommand": {
    "prefix": ["ATL.RegisterCommand", "command"],
    "body": [
      "ATL.RegisterCommand('${1:commandName}', '${2:commandDescription}', '${3:playerGroup}', function(player, args)",
      "  --Code",
      "end, {'${4:type}-${5:name}'}, {",
      "  { name = ${6:suggestionName}, help = ${7:suggestionHelp} }",
      "})"
    ],
    "description": "Register a command in server-side"
  },
  "ATL.GetLicense": {
    "prefix": ["ATL.GetLicense", "license"],
    "body": [
      "ATL.GetLicense(${1:source})"
    ],
    "description": "Returns the license of the user"
  },
  "ATL.GetPassengers": {
    "prefix": "ATL.GetPassengers",
    "body": [
      "ATL.GetPassengers(${1:ped}, ${2:vehicle})"
    ],
    "description": "Returns the peds in the seats of a vehicle"
  },
  "ATL.SendLog": {
    "prefix": ["ATL.SendLog", "log"],
    "body": [
      "ATL.SendLog(${1:tag}, ${2:message})"
    ],
    "description": "Sends a log to your DataDog account"
  },
  "ATL.RegisterServerCallback": {
    "prefix": ["ATL.RegisterServerCallback ", "RegisterServerCallback"],
    "body": [
      "ATL.RegisterServerCallback('${1:name}', ${2:callbackFunction})"
    ],
    "description": "Register a callback function server-side"
  },
  "ATL.TriggerServerCallback": {
    "prefix": ["ATL.TriggerServerCallback ", "TriggerServerCallback"],
    "body": [
      "ATL.TriggerServerCallback('${1:name}', ${2:callbackFunction}, ${3:...})"
    ],
    "description": "Trigger a callback function that was registered server-side"
  },
  "ATL.GetEntities": {
    "prefix": ["ATL.GetEntities", "GetEntities"],
    "body": [
      "ATL.GetEntities(${1:coords}, ${2:entities}, ${3:distance})"
    ],
    "description": "Returns all entities in a specified radius of a passed position"
  },
  "ATL.GetVehicles": {
    "prefix": ["ATL.GetVehicles", "GetVehicles"],
    "body": [
      "ATL.GetVehicles(${1:coords}, ${2:distance})"
    ],
    "description": "Returns all vehicles in a specified radius of a passed position"
  },
  "ATL.CreateVehicle": {
    "prefix": ["ATL.CreateVehicle", "CreateVehicle"],
    "body": [
      "ATL.CreateVehicle(${1:vehicleModel}, ${2:coords}, ${3:callbackFunction})"
    ],
    "description": "Creates a server-side vehicle in specified coords"
  },
  "ATL.CreatePed": {
    "prefix": ["ATL.CreatePed", "CreatePed"],
    "body": [
      "ATL.CreatePed(${1:pedModel}, ${2:coords}, ${3:callbackFunction})"
    ],
    "description": "Creates a ped entity in specified coords"
  },
  "ATL.CreateObject": {
    "prefix": ["ATL.CreateObject", "CreateObject"],
    "body": [
      "ATL.CreateObject(${1:objectModel}, ${2:coords}, ${3:callbackFunction})"
    ],
    "description": "Creates an object entity in specified coords"
  },
  "ATL.DeleteEntity": {
    "prefix": ["ATL.DeleteEntity", "DeleteEntity"],
    "body": [
      "ATL.DeleteEntity(${1:networkId}, ${2:callbackFunction})"
    ],
    "description": "Deletes an entity from its network id"
  },
  "ATL.GetPlayer": {
    "prefix": ["ATL.GetPlayer", "GetPlayer"],
    "body": [
      "local player = ATL.GetPlayer(${1:playerId})"
    ],
    "description": "Gets the player from the core by the player id"
  },
  "player.getCharId": {
    "prefix": ["player.getCharId", "getCharId"],
    "body": [
      "player.getCharId()"
    ],
    "description": "Returns the current character id of the player"
  },
  "player.getSlots": {
    "prefix": ["player.getSlots", "getSlots"],
    "body": [
      "player.getSlots()"
    ],
    "description": "Returns the current character slots of the player"
  },
  "player.getCharName": {
    "prefix": ["player.getCharName", "getCharName"],
    "body": [
      "player.getCharName()"
    ],
    "description": "Returns the current character name of the player(.firstname and .lastname available)"
  },
  "player.getGroup": {
    "prefix": ["player.getGroup", "getGroup"],
    "body": [
      "player.getGroup()"
    ],
    "description": "Returns the current group of the player"
  },
  "player.hasPerms": {
    "prefix": ["player.hasPerms", "hasPerms"],
    "body": [
      "player.hasPerms(${1:groupName})"
    ],
    "description": "Returns if the player has the specified group or higher"
  },
  "player.getJobLabel": {
    "prefix": ["player.getJobLabel", "getJobLabel"],
    "body": [
      "player.getJobLabel()"
    ],
    "description": "Returns the job label of the player"
  },
  "player.getRankLabel": {
    "prefix": ["player.getRankLabel", "getRankLabel"],
    "body": [
      "player.getRankLabel()"
    ],
    "description": "Returns the label of the player's job rank"
  },
  "player.getDuty": {
    "prefix": ["player.getDuty", "getDuty"],
    "body": [
      "player.getDuty()"
    ],
    "description": "Returns the current duty of the player (true/false)"
  },
  "player.getAccount": {
    "prefix": ["player.getAccount", "getAccount"],
    "body": [
      "player.getAccount(${1:accountName})"
    ],
    "description": "Returns the current money from the passed account name"
  },
  "player.getStatus": {
    "prefix": ["player.getStatus", "getStatus"],
    "body": [
      "player.getStatus(${1:statusName})"
    ],
    "description": "Returns the current passed status of the player"
  },
  "player.setCoords": {
    "prefix": ["player.setCoords", "setCoords"],
    "body": [
      "player.setCoords(${1:coords}, ${2:teleportBool})"
    ],
    "description": "Sets the player coords + optionally teleports him"
  },
  "player.setSlots": {
    "prefix": ["player.setSlots", "setSlots"],
    "body": [
      "player.setSlots(${1:amount})"
    ],
    "description": "Set the amount of character slots the player has"
  },
  "player.setGroup": {
    "prefix": ["player.setGroup", "setGroup"],
    "body": [
      "player.setGroup(${1:groupName})"
    ],
    "description": "Set the group of the player"
  },
  "player.setJob": {
    "prefix": ["player.setJob", "setJob"],
    "body": [
      "player.setJob(${1:jobName}, ${2:rankLevel})"
    ],
    "description": "Set the job and grade of the player"
  },
  "player.setDuty": {
    "prefix": ["player.setDuty", "setDuty"],
    "body": [
      "player.setDuty(${1:bool})"
    ],
    "description": "Sets the player on duty or off duty"
  },
  "player.addAccountMoney": {
    "prefix": ["player.addAccountMoney", "addAccountMoney"],
    "body": [
      "player.addAccountMoney(${1:accountName}, ${2:quantity})"
    ],
    "description": "Removes money from the player's account"
  },
  "player.removeAccountMoney": {
    "prefix": ["player.removeAccountMoney", "removeAccountMoney"],
    "body": [
      "player.removeAccountMoney(${1:accountName}, ${2:quantity})"
    ],
    "description": "Removes money from the specified account"
  },
  "player.setStatus": {
    "prefix": ["player.setStatus", "setStatus"],
    "body": [
      "player.setStatus(${1:statusData})"
    ],
    "description": "Sets the status of the player to the table passed"
  }
}